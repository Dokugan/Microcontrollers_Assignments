
led_lookup.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  000004a4  00000538  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004a4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800114  00800114  0000054c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000054c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000057c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000005b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a7c  00000000  00000000  000005f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ee  00000000  00000000  0000106c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000415  00000000  00000000  0000195a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  00001d70  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000047d  00000000  00000000  00001e30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000045c  00000000  00000000  000022ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00002709  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 ea       	ldi	r30, 0xA4	; 164
  a0:	f4 e0       	ldi	r31, 0x04	; 4
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 31       	cpi	r26, 0x14	; 20
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e1       	ldi	r26, 0x14	; 20
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a8 31       	cpi	r26, 0x18	; 24
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	8e d0       	rcall	.+284    	; 0x1e0 <main>
  c4:	ed c1       	rjmp	.+986    	; 0x4a0 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <wait>:
	for (i = lenght; i > 0; i--)
	{
		value += arr[i] * pow(2, i);
	}
	return value;
}
  c8:	18 16       	cp	r1, r24
  ca:	19 06       	cpc	r1, r25
  cc:	6c f4       	brge	.+26     	; 0xe8 <wait+0x20>
  ce:	20 e0       	ldi	r18, 0x00	; 0
  d0:	30 e0       	ldi	r19, 0x00	; 0
  d2:	ef ec       	ldi	r30, 0xCF	; 207
  d4:	f7 e0       	ldi	r31, 0x07	; 7
  d6:	31 97       	sbiw	r30, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <wait+0xe>
  da:	00 c0       	rjmp	.+0      	; 0xdc <wait+0x14>
  dc:	00 00       	nop
  de:	2f 5f       	subi	r18, 0xFF	; 255
  e0:	3f 4f       	sbci	r19, 0xFF	; 255
  e2:	82 17       	cp	r24, r18
  e4:	93 07       	cpc	r25, r19
  e6:	a9 f7       	brne	.-22     	; 0xd2 <wait+0xa>
  e8:	08 95       	ret

000000ea <cyclePattern>:
  ea:	cf 92       	push	r12
  ec:	df 92       	push	r13
  ee:	ef 92       	push	r14
  f0:	ff 92       	push	r15
  f2:	0f 93       	push	r16
  f4:	1f 93       	push	r17
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	7c 01       	movw	r14, r24
  fc:	8b 01       	movw	r16, r22
  fe:	6a 01       	movw	r12, r20
 100:	eb 01       	movw	r28, r22
 102:	cc 0f       	add	r28, r28
 104:	dd 1f       	adc	r29, r29
 106:	ce 01       	movw	r24, r28
 108:	aa d0       	rcall	.+340    	; 0x25e <malloc>
 10a:	ca 94       	dec	r12
 10c:	cd 28       	or	r12, r13
 10e:	21 f0       	breq	.+8      	; 0x118 <cyclePattern+0x2e>
 110:	10 16       	cp	r1, r16
 112:	11 06       	cpc	r1, r17
 114:	34 f1       	brlt	.+76     	; 0x162 <cyclePattern+0x78>
 116:	54 c0       	rjmp	.+168    	; 0x1c0 <cyclePattern+0xd6>
 118:	10 16       	cp	r1, r16
 11a:	11 06       	cpc	r1, r17
 11c:	0c f0       	brlt	.+2      	; 0x120 <cyclePattern+0x36>
 11e:	50 c0       	rjmp	.+160    	; 0x1c0 <cyclePattern+0xd6>
 120:	fe 01       	movw	r30, r28
 122:	32 97       	sbiw	r30, 0x02	; 2
 124:	bf 01       	movw	r22, r30
 126:	6e 0d       	add	r22, r14
 128:	7f 1d       	adc	r23, r15
 12a:	e7 01       	movw	r28, r14
 12c:	22 97       	sbiw	r28, 0x02	; 2
 12e:	dc 01       	movw	r26, r24
 130:	20 e0       	ldi	r18, 0x00	; 0
 132:	30 e0       	ldi	r19, 0x00	; 0
 134:	21 15       	cp	r18, r1
 136:	31 05       	cpc	r19, r1
 138:	39 f4       	brne	.+14     	; 0x148 <cyclePattern+0x5e>
 13a:	fb 01       	movw	r30, r22
 13c:	40 81       	ld	r20, Z
 13e:	51 81       	ldd	r21, Z+1	; 0x01
 140:	fc 01       	movw	r30, r24
 142:	51 83       	std	Z+1, r21	; 0x01
 144:	40 83       	st	Z, r20
 146:	05 c0       	rjmp	.+10     	; 0x152 <cyclePattern+0x68>
 148:	48 81       	ld	r20, Y
 14a:	59 81       	ldd	r21, Y+1	; 0x01
 14c:	11 96       	adiw	r26, 0x01	; 1
 14e:	5c 93       	st	X, r21
 150:	4e 93       	st	-X, r20
 152:	2f 5f       	subi	r18, 0xFF	; 255
 154:	3f 4f       	sbci	r19, 0xFF	; 255
 156:	22 96       	adiw	r28, 0x02	; 2
 158:	12 96       	adiw	r26, 0x02	; 2
 15a:	02 17       	cp	r16, r18
 15c:	13 07       	cpc	r17, r19
 15e:	51 f7       	brne	.-44     	; 0x134 <cyclePattern+0x4a>
 160:	31 c0       	rjmp	.+98     	; 0x1c4 <cyclePattern+0xda>
 162:	9e 01       	movw	r18, r28
 164:	2e 5f       	subi	r18, 0xFE	; 254
 166:	3f 4f       	sbci	r19, 0xFF	; 255
 168:	b7 01       	movw	r22, r14
 16a:	62 0f       	add	r22, r18
 16c:	73 1f       	adc	r23, r19
 16e:	dc 01       	movw	r26, r24
 170:	ac 0f       	add	r26, r28
 172:	bd 1f       	adc	r27, r29
 174:	f7 01       	movw	r30, r14
 176:	ec 0f       	add	r30, r28
 178:	fd 1f       	adc	r31, r29
 17a:	98 01       	movw	r18, r16
 17c:	2f 5f       	subi	r18, 0xFF	; 255
 17e:	3f 4f       	sbci	r19, 0xFF	; 255
 180:	02 17       	cp	r16, r18
 182:	13 07       	cpc	r17, r19
 184:	39 f4       	brne	.+14     	; 0x194 <cyclePattern+0xaa>
 186:	eb 01       	movw	r28, r22
 188:	48 81       	ld	r20, Y
 18a:	59 81       	ldd	r21, Y+1	; 0x01
 18c:	11 96       	adiw	r26, 0x01	; 1
 18e:	5c 93       	st	X, r21
 190:	4e 93       	st	-X, r20
 192:	05 c0       	rjmp	.+10     	; 0x19e <cyclePattern+0xb4>
 194:	42 81       	ldd	r20, Z+2	; 0x02
 196:	53 81       	ldd	r21, Z+3	; 0x03
 198:	11 96       	adiw	r26, 0x01	; 1
 19a:	5c 93       	st	X, r21
 19c:	4e 93       	st	-X, r20
 19e:	21 50       	subi	r18, 0x01	; 1
 1a0:	31 09       	sbc	r19, r1
 1a2:	12 97       	sbiw	r26, 0x02	; 2
 1a4:	32 97       	sbiw	r30, 0x02	; 2
 1a6:	21 30       	cpi	r18, 0x01	; 1
 1a8:	31 05       	cpc	r19, r1
 1aa:	51 f7       	brne	.-44     	; 0x180 <cyclePattern+0x96>
 1ac:	0b c0       	rjmp	.+22     	; 0x1c4 <cyclePattern+0xda>
 1ae:	4d 91       	ld	r20, X+
 1b0:	5d 91       	ld	r21, X+
 1b2:	41 93       	st	Z+, r20
 1b4:	51 93       	st	Z+, r21
 1b6:	2f 5f       	subi	r18, 0xFF	; 255
 1b8:	3f 4f       	sbci	r19, 0xFF	; 255
 1ba:	20 17       	cp	r18, r16
 1bc:	31 07       	cpc	r19, r17
 1be:	bc f3       	brlt	.-18     	; 0x1ae <cyclePattern+0xc4>
 1c0:	e6 d0       	rcall	.+460    	; 0x38e <free>
 1c2:	05 c0       	rjmp	.+10     	; 0x1ce <cyclePattern+0xe4>
 1c4:	dc 01       	movw	r26, r24
 1c6:	f7 01       	movw	r30, r14
 1c8:	20 e0       	ldi	r18, 0x00	; 0
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	f0 cf       	rjmp	.-32     	; 0x1ae <cyclePattern+0xc4>
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	1f 91       	pop	r17
 1d4:	0f 91       	pop	r16
 1d6:	ff 90       	pop	r15
 1d8:	ef 90       	pop	r14
 1da:	df 90       	pop	r13
 1dc:	cf 90       	pop	r12
 1de:	08 95       	ret

000001e0 <main>:

int main(void)
{
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
 1e4:	cd b7       	in	r28, 0x3d	; 61
 1e6:	de b7       	in	r29, 0x3e	; 62
 1e8:	2e 97       	sbiw	r28, 0x0e	; 14
 1ea:	0f b6       	in	r0, 0x3f	; 63
 1ec:	f8 94       	cli
 1ee:	de bf       	out	0x3e, r29	; 62
 1f0:	0f be       	out	0x3f, r0	; 63
 1f2:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0xFF;
 1f4:	8f ef       	ldi	r24, 0xFF	; 255
 1f6:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0xFF;
 1f8:	87 bb       	out	0x17, r24	; 23
	DDRC = 0xFF;
 1fa:	84 bb       	out	0x14, r24	; 20
	DDRD = 0xFF;
 1fc:	81 bb       	out	0x11, r24	; 17
	DDRE = 0xFF;
 1fe:	82 b9       	out	0x02, r24	; 2
	DDRF = 0xFF;
 200:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	DDRG = 0xFF;
 204:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	
	int pattern[7] = {0b10000001,0b01000010,0b00100100,0b00011000,0x00,0x00,0x00};
 208:	8e e0       	ldi	r24, 0x0E	; 14
 20a:	e6 e0       	ldi	r30, 0x06	; 6
 20c:	f1 e0       	ldi	r31, 0x01	; 1
 20e:	de 01       	movw	r26, r28
 210:	11 96       	adiw	r26, 0x01	; 1
 212:	01 90       	ld	r0, Z+
 214:	0d 92       	st	X+, r0
 216:	8a 95       	dec	r24
 218:	e1 f7       	brne	.-8      	; 0x212 <main+0x32>
		PORTA = pattern[0];
		PORTB = pattern[1];
		PORTC = pattern[2];
		PORTD = pattern[3];
		PORTE = pattern[4];
		PORTF = pattern[5];
 21a:	0f 2e       	mov	r0, r31
 21c:	f2 e6       	ldi	r31, 0x62	; 98
 21e:	ef 2e       	mov	r14, r31
 220:	f1 2c       	mov	r15, r1
 222:	f0 2d       	mov	r31, r0
		PORTG = pattern[6];
 224:	05 e6       	ldi	r16, 0x65	; 101
 226:	10 e0       	ldi	r17, 0x00	; 0
	
	int pattern[7] = {0b10000001,0b01000010,0b00100100,0b00011000,0x00,0x00,0x00};
	
	while (1)
	{
		cyclePattern(pattern, 7, 1);
 228:	41 e0       	ldi	r20, 0x01	; 1
 22a:	50 e0       	ldi	r21, 0x00	; 0
 22c:	67 e0       	ldi	r22, 0x07	; 7
 22e:	70 e0       	ldi	r23, 0x00	; 0
 230:	ce 01       	movw	r24, r28
 232:	01 96       	adiw	r24, 0x01	; 1
 234:	5a df       	rcall	.-332    	; 0xea <cyclePattern>
		PORTA = pattern[0];
 236:	89 81       	ldd	r24, Y+1	; 0x01
 238:	8b bb       	out	0x1b, r24	; 27
		PORTB = pattern[1];
 23a:	8b 81       	ldd	r24, Y+3	; 0x03
 23c:	88 bb       	out	0x18, r24	; 24
		PORTC = pattern[2];
 23e:	8d 81       	ldd	r24, Y+5	; 0x05
 240:	85 bb       	out	0x15, r24	; 21
		PORTD = pattern[3];
 242:	8f 81       	ldd	r24, Y+7	; 0x07
 244:	82 bb       	out	0x12, r24	; 18
		PORTE = pattern[4];
 246:	89 85       	ldd	r24, Y+9	; 0x09
 248:	83 b9       	out	0x03, r24	; 3
		PORTF = pattern[5];
 24a:	8b 85       	ldd	r24, Y+11	; 0x0b
 24c:	f7 01       	movw	r30, r14
 24e:	80 83       	st	Z, r24
		PORTG = pattern[6];
 250:	8d 85       	ldd	r24, Y+13	; 0x0d
 252:	f8 01       	movw	r30, r16
 254:	80 83       	st	Z, r24
		wait(200);
 256:	88 ec       	ldi	r24, 0xC8	; 200
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	36 df       	rcall	.-404    	; 0xc8 <wait>
 25c:	e5 cf       	rjmp	.-54     	; 0x228 <main+0x48>

0000025e <malloc>:
 25e:	0f 93       	push	r16
 260:	1f 93       	push	r17
 262:	cf 93       	push	r28
 264:	df 93       	push	r29
 266:	82 30       	cpi	r24, 0x02	; 2
 268:	91 05       	cpc	r25, r1
 26a:	10 f4       	brcc	.+4      	; 0x270 <malloc+0x12>
 26c:	82 e0       	ldi	r24, 0x02	; 2
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <__flp>
 274:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <__flp+0x1>
 278:	20 e0       	ldi	r18, 0x00	; 0
 27a:	30 e0       	ldi	r19, 0x00	; 0
 27c:	a0 e0       	ldi	r26, 0x00	; 0
 27e:	b0 e0       	ldi	r27, 0x00	; 0
 280:	30 97       	sbiw	r30, 0x00	; 0
 282:	19 f1       	breq	.+70     	; 0x2ca <malloc+0x6c>
 284:	40 81       	ld	r20, Z
 286:	51 81       	ldd	r21, Z+1	; 0x01
 288:	02 81       	ldd	r16, Z+2	; 0x02
 28a:	13 81       	ldd	r17, Z+3	; 0x03
 28c:	48 17       	cp	r20, r24
 28e:	59 07       	cpc	r21, r25
 290:	c8 f0       	brcs	.+50     	; 0x2c4 <malloc+0x66>
 292:	84 17       	cp	r24, r20
 294:	95 07       	cpc	r25, r21
 296:	69 f4       	brne	.+26     	; 0x2b2 <malloc+0x54>
 298:	10 97       	sbiw	r26, 0x00	; 0
 29a:	31 f0       	breq	.+12     	; 0x2a8 <malloc+0x4a>
 29c:	12 96       	adiw	r26, 0x02	; 2
 29e:	0c 93       	st	X, r16
 2a0:	12 97       	sbiw	r26, 0x02	; 2
 2a2:	13 96       	adiw	r26, 0x03	; 3
 2a4:	1c 93       	st	X, r17
 2a6:	27 c0       	rjmp	.+78     	; 0x2f6 <malloc+0x98>
 2a8:	00 93 16 01 	sts	0x0116, r16	; 0x800116 <__flp>
 2ac:	10 93 17 01 	sts	0x0117, r17	; 0x800117 <__flp+0x1>
 2b0:	22 c0       	rjmp	.+68     	; 0x2f6 <malloc+0x98>
 2b2:	21 15       	cp	r18, r1
 2b4:	31 05       	cpc	r19, r1
 2b6:	19 f0       	breq	.+6      	; 0x2be <malloc+0x60>
 2b8:	42 17       	cp	r20, r18
 2ba:	53 07       	cpc	r21, r19
 2bc:	18 f4       	brcc	.+6      	; 0x2c4 <malloc+0x66>
 2be:	9a 01       	movw	r18, r20
 2c0:	bd 01       	movw	r22, r26
 2c2:	ef 01       	movw	r28, r30
 2c4:	df 01       	movw	r26, r30
 2c6:	f8 01       	movw	r30, r16
 2c8:	db cf       	rjmp	.-74     	; 0x280 <malloc+0x22>
 2ca:	21 15       	cp	r18, r1
 2cc:	31 05       	cpc	r19, r1
 2ce:	f9 f0       	breq	.+62     	; 0x30e <malloc+0xb0>
 2d0:	28 1b       	sub	r18, r24
 2d2:	39 0b       	sbc	r19, r25
 2d4:	24 30       	cpi	r18, 0x04	; 4
 2d6:	31 05       	cpc	r19, r1
 2d8:	80 f4       	brcc	.+32     	; 0x2fa <malloc+0x9c>
 2da:	8a 81       	ldd	r24, Y+2	; 0x02
 2dc:	9b 81       	ldd	r25, Y+3	; 0x03
 2de:	61 15       	cp	r22, r1
 2e0:	71 05       	cpc	r23, r1
 2e2:	21 f0       	breq	.+8      	; 0x2ec <malloc+0x8e>
 2e4:	fb 01       	movw	r30, r22
 2e6:	93 83       	std	Z+3, r25	; 0x03
 2e8:	82 83       	std	Z+2, r24	; 0x02
 2ea:	04 c0       	rjmp	.+8      	; 0x2f4 <malloc+0x96>
 2ec:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__flp+0x1>
 2f0:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__flp>
 2f4:	fe 01       	movw	r30, r28
 2f6:	32 96       	adiw	r30, 0x02	; 2
 2f8:	44 c0       	rjmp	.+136    	; 0x382 <malloc+0x124>
 2fa:	fe 01       	movw	r30, r28
 2fc:	e2 0f       	add	r30, r18
 2fe:	f3 1f       	adc	r31, r19
 300:	81 93       	st	Z+, r24
 302:	91 93       	st	Z+, r25
 304:	22 50       	subi	r18, 0x02	; 2
 306:	31 09       	sbc	r19, r1
 308:	39 83       	std	Y+1, r19	; 0x01
 30a:	28 83       	st	Y, r18
 30c:	3a c0       	rjmp	.+116    	; 0x382 <malloc+0x124>
 30e:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <__data_end>
 312:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <__data_end+0x1>
 316:	23 2b       	or	r18, r19
 318:	41 f4       	brne	.+16     	; 0x32a <malloc+0xcc>
 31a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 31e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 322:	30 93 15 01 	sts	0x0115, r19	; 0x800115 <__data_end+0x1>
 326:	20 93 14 01 	sts	0x0114, r18	; 0x800114 <__data_end>
 32a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 32e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 332:	21 15       	cp	r18, r1
 334:	31 05       	cpc	r19, r1
 336:	41 f4       	brne	.+16     	; 0x348 <malloc+0xea>
 338:	2d b7       	in	r18, 0x3d	; 61
 33a:	3e b7       	in	r19, 0x3e	; 62
 33c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 340:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 344:	24 1b       	sub	r18, r20
 346:	35 0b       	sbc	r19, r21
 348:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <__data_end>
 34c:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <__data_end+0x1>
 350:	e2 17       	cp	r30, r18
 352:	f3 07       	cpc	r31, r19
 354:	a0 f4       	brcc	.+40     	; 0x37e <malloc+0x120>
 356:	2e 1b       	sub	r18, r30
 358:	3f 0b       	sbc	r19, r31
 35a:	28 17       	cp	r18, r24
 35c:	39 07       	cpc	r19, r25
 35e:	78 f0       	brcs	.+30     	; 0x37e <malloc+0x120>
 360:	ac 01       	movw	r20, r24
 362:	4e 5f       	subi	r20, 0xFE	; 254
 364:	5f 4f       	sbci	r21, 0xFF	; 255
 366:	24 17       	cp	r18, r20
 368:	35 07       	cpc	r19, r21
 36a:	48 f0       	brcs	.+18     	; 0x37e <malloc+0x120>
 36c:	4e 0f       	add	r20, r30
 36e:	5f 1f       	adc	r21, r31
 370:	50 93 15 01 	sts	0x0115, r21	; 0x800115 <__data_end+0x1>
 374:	40 93 14 01 	sts	0x0114, r20	; 0x800114 <__data_end>
 378:	81 93       	st	Z+, r24
 37a:	91 93       	st	Z+, r25
 37c:	02 c0       	rjmp	.+4      	; 0x382 <malloc+0x124>
 37e:	e0 e0       	ldi	r30, 0x00	; 0
 380:	f0 e0       	ldi	r31, 0x00	; 0
 382:	cf 01       	movw	r24, r30
 384:	df 91       	pop	r29
 386:	cf 91       	pop	r28
 388:	1f 91       	pop	r17
 38a:	0f 91       	pop	r16
 38c:	08 95       	ret

0000038e <free>:
 38e:	cf 93       	push	r28
 390:	df 93       	push	r29
 392:	00 97       	sbiw	r24, 0x00	; 0
 394:	09 f4       	brne	.+2      	; 0x398 <free+0xa>
 396:	81 c0       	rjmp	.+258    	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 398:	fc 01       	movw	r30, r24
 39a:	32 97       	sbiw	r30, 0x02	; 2
 39c:	13 82       	std	Z+3, r1	; 0x03
 39e:	12 82       	std	Z+2, r1	; 0x02
 3a0:	a0 91 16 01 	lds	r26, 0x0116	; 0x800116 <__flp>
 3a4:	b0 91 17 01 	lds	r27, 0x0117	; 0x800117 <__flp+0x1>
 3a8:	10 97       	sbiw	r26, 0x00	; 0
 3aa:	81 f4       	brne	.+32     	; 0x3cc <free+0x3e>
 3ac:	20 81       	ld	r18, Z
 3ae:	31 81       	ldd	r19, Z+1	; 0x01
 3b0:	82 0f       	add	r24, r18
 3b2:	93 1f       	adc	r25, r19
 3b4:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <__data_end>
 3b8:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <__data_end+0x1>
 3bc:	28 17       	cp	r18, r24
 3be:	39 07       	cpc	r19, r25
 3c0:	51 f5       	brne	.+84     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3c2:	f0 93 15 01 	sts	0x0115, r31	; 0x800115 <__data_end+0x1>
 3c6:	e0 93 14 01 	sts	0x0114, r30	; 0x800114 <__data_end>
 3ca:	67 c0       	rjmp	.+206    	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 3cc:	ed 01       	movw	r28, r26
 3ce:	20 e0       	ldi	r18, 0x00	; 0
 3d0:	30 e0       	ldi	r19, 0x00	; 0
 3d2:	ce 17       	cp	r28, r30
 3d4:	df 07       	cpc	r29, r31
 3d6:	40 f4       	brcc	.+16     	; 0x3e8 <free+0x5a>
 3d8:	4a 81       	ldd	r20, Y+2	; 0x02
 3da:	5b 81       	ldd	r21, Y+3	; 0x03
 3dc:	9e 01       	movw	r18, r28
 3de:	41 15       	cp	r20, r1
 3e0:	51 05       	cpc	r21, r1
 3e2:	f1 f0       	breq	.+60     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 3e4:	ea 01       	movw	r28, r20
 3e6:	f5 cf       	rjmp	.-22     	; 0x3d2 <free+0x44>
 3e8:	d3 83       	std	Z+3, r29	; 0x03
 3ea:	c2 83       	std	Z+2, r28	; 0x02
 3ec:	40 81       	ld	r20, Z
 3ee:	51 81       	ldd	r21, Z+1	; 0x01
 3f0:	84 0f       	add	r24, r20
 3f2:	95 1f       	adc	r25, r21
 3f4:	c8 17       	cp	r28, r24
 3f6:	d9 07       	cpc	r29, r25
 3f8:	59 f4       	brne	.+22     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3fa:	88 81       	ld	r24, Y
 3fc:	99 81       	ldd	r25, Y+1	; 0x01
 3fe:	84 0f       	add	r24, r20
 400:	95 1f       	adc	r25, r21
 402:	02 96       	adiw	r24, 0x02	; 2
 404:	91 83       	std	Z+1, r25	; 0x01
 406:	80 83       	st	Z, r24
 408:	8a 81       	ldd	r24, Y+2	; 0x02
 40a:	9b 81       	ldd	r25, Y+3	; 0x03
 40c:	93 83       	std	Z+3, r25	; 0x03
 40e:	82 83       	std	Z+2, r24	; 0x02
 410:	21 15       	cp	r18, r1
 412:	31 05       	cpc	r19, r1
 414:	29 f4       	brne	.+10     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 416:	f0 93 17 01 	sts	0x0117, r31	; 0x800117 <__flp+0x1>
 41a:	e0 93 16 01 	sts	0x0116, r30	; 0x800116 <__flp>
 41e:	3d c0       	rjmp	.+122    	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 420:	e9 01       	movw	r28, r18
 422:	fb 83       	std	Y+3, r31	; 0x03
 424:	ea 83       	std	Y+2, r30	; 0x02
 426:	49 91       	ld	r20, Y+
 428:	59 91       	ld	r21, Y+
 42a:	c4 0f       	add	r28, r20
 42c:	d5 1f       	adc	r29, r21
 42e:	ec 17       	cp	r30, r28
 430:	fd 07       	cpc	r31, r29
 432:	61 f4       	brne	.+24     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 434:	80 81       	ld	r24, Z
 436:	91 81       	ldd	r25, Z+1	; 0x01
 438:	84 0f       	add	r24, r20
 43a:	95 1f       	adc	r25, r21
 43c:	02 96       	adiw	r24, 0x02	; 2
 43e:	e9 01       	movw	r28, r18
 440:	99 83       	std	Y+1, r25	; 0x01
 442:	88 83       	st	Y, r24
 444:	82 81       	ldd	r24, Z+2	; 0x02
 446:	93 81       	ldd	r25, Z+3	; 0x03
 448:	9b 83       	std	Y+3, r25	; 0x03
 44a:	8a 83       	std	Y+2, r24	; 0x02
 44c:	e0 e0       	ldi	r30, 0x00	; 0
 44e:	f0 e0       	ldi	r31, 0x00	; 0
 450:	12 96       	adiw	r26, 0x02	; 2
 452:	8d 91       	ld	r24, X+
 454:	9c 91       	ld	r25, X
 456:	13 97       	sbiw	r26, 0x03	; 3
 458:	00 97       	sbiw	r24, 0x00	; 0
 45a:	19 f0       	breq	.+6      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 45c:	fd 01       	movw	r30, r26
 45e:	dc 01       	movw	r26, r24
 460:	f7 cf       	rjmp	.-18     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 462:	8d 91       	ld	r24, X+
 464:	9c 91       	ld	r25, X
 466:	11 97       	sbiw	r26, 0x01	; 1
 468:	9d 01       	movw	r18, r26
 46a:	2e 5f       	subi	r18, 0xFE	; 254
 46c:	3f 4f       	sbci	r19, 0xFF	; 255
 46e:	82 0f       	add	r24, r18
 470:	93 1f       	adc	r25, r19
 472:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <__data_end>
 476:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <__data_end+0x1>
 47a:	28 17       	cp	r18, r24
 47c:	39 07       	cpc	r19, r25
 47e:	69 f4       	brne	.+26     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 480:	30 97       	sbiw	r30, 0x00	; 0
 482:	29 f4       	brne	.+10     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 484:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <__flp+0x1>
 488:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <__flp>
 48c:	02 c0       	rjmp	.+4      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 48e:	13 82       	std	Z+3, r1	; 0x03
 490:	12 82       	std	Z+2, r1	; 0x02
 492:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <__data_end+0x1>
 496:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <__data_end>
 49a:	df 91       	pop	r29
 49c:	cf 91       	pop	r28
 49e:	08 95       	ret

000004a0 <_exit>:
 4a0:	f8 94       	cli

000004a2 <__stop_program>:
 4a2:	ff cf       	rjmp	.-2      	; 0x4a2 <__stop_program>
